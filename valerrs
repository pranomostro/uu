==1388== Memcheck, a memory error detector
==1388== Copyright (C) 2002-2013, and GNU GPL'd, by Julian Seward et al.
==1388== Using Valgrind-3.10.1 and LibVEX; rerun with -h for copyright info
==1388== Command: ./bhashuu
==1388== 
==1388== Invalid write of size 4
==1388==    at 0x400A04: shiftback (in /home/adrian/proj/begun/uu/bhashuu)
==1388==    by 0x400920: main (in /home/adrian/proj/begun/uu/bhashuu)
==1388==  Address 0x52510c0 is 0 bytes after a block of size 1,024 alloc'd
==1388==    at 0x4C2AC85: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1388==    by 0x4007A5: main (in /home/adrian/proj/begun/uu/bhashuu)
==1388== 
==1388== Invalid read of size 4
==1388==    at 0x400A02: shiftback (in /home/adrian/proj/begun/uu/bhashuu)
==1388==    by 0x400920: main (in /home/adrian/proj/begun/uu/bhashuu)
==1388==  Address 0x52510c0 is 0 bytes after a block of size 1,024 alloc'd
==1388==    at 0x4C2AC85: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1388==    by 0x4007A5: main (in /home/adrian/proj/begun/uu/bhashuu)
==1388== 
==1388== Invalid read of size 4
==1388==    at 0x400A78: binfind (in /home/adrian/proj/begun/uu/bhashuu)
==1388==    by 0x400867: main (in /home/adrian/proj/begun/uu/bhashuu)
==1388==  Address 0x52510c0 is 0 bytes after a block of size 1,024 alloc'd
==1388==    at 0x4C2AC85: calloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==1388==    by 0x4007A5: main (in /home/adrian/proj/begun/uu/bhashuu)
==1388== 

valgrind: m_mallocfree.c:304 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
valgrind: Heap block lo/hi size mismatch: lo = 1088, hi = 18265079219176653550.
This is probably caused by your program erroneously writing past the
end of a heap block and corrupting heap metadata.  If you fix any
invalid writes reported by Memcheck, this assertion failure will
probably go away.  Please try that before reporting this as a bug.


host stacktrace:
==1388==    at 0x380A810F: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1388==    by 0x380A8224: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1388==    by 0x380A83A6: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1388==    by 0x380B500C: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1388==    by 0x380A1493: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1388==    by 0x3809FF6B: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1388==    by 0x380A3E3A: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1388==    by 0x3809F4B2: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1388==    by 0x3807D867: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==1388==    by 0x802C2C5DE: ???
==1388==    by 0x802B99EEF: ???

sched status:
  running_tid=1

Thread 1: status = VgTs_Runnable
==1388==    at 0x400A9E: binfind (in /home/adrian/proj/begun/uu/bhashuu)
==1388==    by 0x400867: main (in /home/adrian/proj/begun/uu/bhashuu)


Note: see also the FAQ in the source distribution.
It contains workarounds to several common problems.
In particular, if Valgrind aborted or crashed after
identifying problems in your program, there's a good chance
that fixing those problems will prevent Valgrind aborting or
crashing, especially if it happened in m_mallocfree.c.

If that doesn't help, please report this bug to: www.valgrind.org

In the bug report, send all the above text, the valgrind
version, and what OS and version you are using.  Thanks.

